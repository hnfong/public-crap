<think>
Okay, let's try to figure out when this article was written based on the hints in the passage. The user mentioned that the writing style is connected to a particular day and month. Let me start by reading through the passage again to pick up any clues.

First, the author talks about frustrations with Rust and a preference for C++. They mention the Linebender projects possibly switching to C++ using CMake. Then there's a section on safety, language evolution, and community. The conclusion mentions C++20 and looking forward to C++26, cppfront, and Carbon. The community section contrasts Rust's code of conduct with the perceived friendliness of the C++ community.

Looking for specific dates or events mentioned. The article mentions C++20 and C++26. C++20 was released in December 2020. If they're looking forward to C++26, that's probably in the future, but maybe the article was written before C++20 was out? Wait, no, because C++20 was already released in 2020. Wait, the author says "C++20 brings us modules... and one I’m looking forward to actually being implemented fairly soon." That suggests that when the article was written, C++20 was upcoming. So if C++20 was released in 2020, maybe the article was written before that. But wait, the modules feature in C++20 was indeed a big feature. Let me check when C++20 was released. Yes, December 2020. So if the author is talking about C++20 as something upcoming, then the article must have been written before 2020. Wait, but the modules were part of C++20, which was released in 2020. If the author is writing in 2019 or earlier, then C++20 hasn't been released yet. But the article says "C++20 brings us modules... looking forward to actually being implemented fairly soon." So maybe the article was written in late 2019, before C++20's release. But wait, C++20 was actually approved in 2020, so maybe the article was written in 2020, after the release. Hmm, this is a bit confusing.

Wait, the author mentions "C++20 brings us modules, an innovative new feature, and one I’m looking forward to actually being implemented fairly soon." If the article was written after C++20 was released, then the "fairly soon" would make sense if the modules were just implemented. But C++20 modules were released in 2020, so if the article was written after that, maybe in 2021. But the author is talking about future features like C++26, which is several years away. Alternatively, maybe the article was written in 2018 or 2019, when C++20 was still in development. Let me check the history of C++ standards. C++11 was 2011, C++14 2014, C++17 2017, C++20 2020, C++23 2022, etc. So if the author is referring to C++20 as the upcoming version, then the article must have been written before 2020. But the mention of C++26 (which is a hypothetical version beyond C++23) suggests that the author is looking several years ahead. 

Another clue is the mention of the Rust community's code of conduct and diversity. Rust's code of conduct became more prominent around 2015-2016, and there was some controversy around that. The author expresses a negative view of the Rust community, preferring the C++ community's friendliness. Maybe this was written around the time when Rust was gaining more attention but before it

