```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSumConverter {

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String input;
        long totalSum = 0;

        try {
            while ((input = reader.readLine()) != null) {
                Matcher matcher = Pattern.compile("(\\d{1,3}(?:,\\d{3})*)(?:\\.\\d+)?[kKmMgG]?", Pattern.CASE_INSENSITIVE).matcher(input);
                while (matcher.find()) {
                    String numberStr = matcher.group(1).replace(",", "");
                    String suffix = matcher.group().substring(numberStr.length()).toUpperCase();
                    double number = Double.parseDouble(numberStr);
                    totalSum += convertToBase(number, suffix);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.printf("%.1f%n", totalSum);
        System.out.printf("%.1f k%n", totalSum / 1024.0);
        System.out.printf("%.1f M%n", totalSum / (1024.0 * 1024.0));
        System.out.printf("%.1f G%n", totalSum / (1024.0 * 1024.0 * 1024.0));
    }

    private static long convertToBase(double number, String suffix) {
        switch (suffix) {
            case "K":
                return (long) (number * 1024);
            case "M":
                return (long) (number * 1024 * 1024);
            case "G":
                return (long) (number * 1024 * 1024 * 1024);
            default:
                return (long) number;
        }
    }
}
``` [end of text]


