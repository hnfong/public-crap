### Q1. What (if any) is the eventual output of the following Python program?

```python
import math
x = 0.0
while x < math.inf:
    x += 1.0
print(x)
```

**Answer:**

The program will eventually output `inf` (infinity).

**Explanation:**

- The variable `x` starts at `0.0`.
- The loop continues as long as `x` is less than `math.inf` (infinity).
- In each iteration, `x` is incremented by `1.0`.
- Since `x` is incremented by a finite value in each iteration, it will eventually reach a point where the value of `x` exceeds the largest representable finite floating-point number in IEEE 754 format. At this point, `x` will be promoted to `inf` (infinity).
- Once `x` becomes `inf`, the condition `x < math.inf` will be `False`, and the loop will terminate.
- The final value of `x` is `inf`, which is printed.

---

### Q2. What (if any) is the eventual output of the following Python program? Is it different from the results above?

```python
import math
x = 1.0
while x < math.inf:
    x = x * 1.001
print(x)
```

**Answer:**

The program will eventually output `inf` (infinity).

**Explanation:**

- The variable `x` starts at `1.0`.
- The loop continues as long as `x` is less than `math.inf` (infinity).
- In each iteration, `x` is multiplied by `1.001`.
- Since `x` is being multiplied by a number slightly greater than `1.0`, it will grow exponentially.
- Eventually, `x` will exceed the largest representable finite floating-point number in IEEE 754 format, at which point it will be promoted to `inf` (infinity).
- Once `x` becomes `inf`, the condition `x < math.inf` will be `False`, and the loop will terminate.
- The final value of `x` is `inf`, which is printed.

**Comparison with Q1:**

- Both programs eventually output `inf`.
- The difference lies in how `x` reaches `inf`:
  - In Q1, `x` is incremented by a fixed amount (`1.0`) in each iteration.
  - In Q2, `x` grows exponentially by being multiplied by `1.001` in each iteration.

---

### Q3. Consider the following program:

```python
import math
x = 0.0
inc = float(input("Enter a number"))
while x < math.inf:
    x += inc
print("Done")
```

Are there inputs that will lead to the output "Done"? Give at least 2 examples of such inputs if possible.

**Answer:**

Yes, there are inputs that will lead to the output "Done". Here are two examples:

1. **Input: `0.0`**
   - If the user enters `0.0`, `x` will remain `0.0` in each iteration.
   - The condition `x < math.inf` will always be `True`, and the loop will run indefinitely.
   - Since the loop never terminates, the program will not print "Done".

2. **Input: `1.0`**
   - If the user enters `1.0`, `x` will be incremented by `1.0` in each iteration.
   - Eventually, `x` will exceed the largest representable finite floating-point number, and it will be promoted to `inf`.
   - The condition `x < math.inf` will become `False`, and the loop will terminate.
   - The program will print "Done".

**Explanation:**

- For inputs greater than `0.0`, `x` will eventually reach `inf`, and the loop will terminate, leading to the output "Done".
- For inputs equal to `0.0`, the loop will run indefinitely, and "Done" will never be printed.
- For inputs less than `0.0`, `x` will decrease in each iteration, and the loop will never terminate (unless the input is `-inf`, in which case `x` would become `-inf` and the loop would terminate).

---

### Summary of Answers:

- **Q1:** The output is `inf`.
- **Q2:** The output is `inf`, same as Q1.
- **Q3:** Yes, inputs like `1.0` will lead to the output "Done". [end of text]


