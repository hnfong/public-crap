```java
import java.util.regex.*;
import java.util.Scanner;
import java.text.DecimalFormat;

public class NumberSummarizer {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder input = new StringBuilder();
        while (scanner.hasNextLine()) {
            input.append(scanner.nextLine()).append("\n");
        }
        scanner.close();

        String text = input.toString();
        Pattern pattern = Pattern.compile("\\b(\\d{1,3}(?:,\\d{3})*|\\d+)(\\.\\d+)?([kKmMgG])?\\b");
        Matcher matcher = pattern.matcher(text);

        long totalSum = 0;

        while (matcher.find()) {
            String numberPart = matcher.group(1).replace(",", "");
            String decimalPart = matcher.group(2);
            String suffix = matcher.group(3);

            double number;
            if (decimalPart != null) {
                number = Double.parseDouble(numberPart + decimalPart);
            } else {
                number = Double.parseDouble(numberPart);
            }

            if (suffix != null) {
                switch (suffix.toLowerCase()) {
                    case "k":
                        number *= 1024;
                        break;
                    case "m":
                        number *= 1024 * 1024;
                        break;
                    case "g":
                        number *= 1024 * 1024 * 1024;
                        break;
                }
            }

            totalSum += (long) Math.round(number);
        }

        DecimalFormat df = new DecimalFormat("#.#");

        System.out.println(totalSum);
        System.out.println(df.format(totalSum / 1024.0) + " k");
        System.out.println(df.format(totalSum / (1024.0 * 1024)) + " M");
        System.out.println(df.format(totalSum / (1024.0 * 1024 * 1024)) + " G");
    }
}
``` [end of text]


