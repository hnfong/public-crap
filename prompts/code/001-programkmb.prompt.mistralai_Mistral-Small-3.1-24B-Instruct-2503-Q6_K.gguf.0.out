```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSumCalculator {

    private static final Pattern NUMBER_PATTERN = Pattern.compile(
        "(\\d+(\\.\\d+)?|\\d{1,3}(,\\d{3})*)([kKmMgG])?"
    );

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder input = new StringBuilder();

        try {
            String line;
            while ((line = reader.readLine()) != null) {
                input.append(line).append(" ");
            }
        } catch (IOException e) {
            System.err.println("Error reading input: " + e.getMessage());
            return;
        }

        double totalSum = 0.0;
        Matcher matcher = NUMBER_PATTERN.matcher(input.toString());

        while (matcher.find()) {
            String numberStr = matcher.group(1);
            String suffix = matcher.group(4);

            double value = parseNumber(numberStr);
            if (suffix != null) {
                value = convertToBaseValue(value, suffix.toLowerCase());
            }
            totalSum += value;
        }

        System.out.printf("%.1f%n", totalSum);
        System.out.printf("%.1f k%n", totalSum / 1024);
        System.out.printf("%.1f M%n", totalSum / (1024 * 1024));
        System.out.printf("%.1f G%n", totalSum / (1024 * 1024 * 1024));
    }

    private static double parseNumber(String numberStr) {
        return Double.parseDouble(numberStr.replace(",", ""));
    }

    private static double convertToBaseValue(double value, String suffix) {
        switch (suffix) {
            case "k":
                return value * 1024;
            case "m":
                return value * 1024 * 1024;
            case "g":
                return value * 1024 * 1024 * 1024;
            default:
                return value;
        }
    }
}
``` [end of text]


