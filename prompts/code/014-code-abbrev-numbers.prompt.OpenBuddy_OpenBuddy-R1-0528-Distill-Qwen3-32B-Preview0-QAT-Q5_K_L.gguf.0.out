Here is a Python solution for the problem:

```python
def human_readable_number(n):
    if n < 1000:
        return str(n)
    elif n < 1000000:
        return f"{n/1000:.1f}k"
    elif n < 1000000000:
        return f"{n/1000000:.1f}M"
    else:
        return f"{n/1000000000:.1f}B"

# Test the function
print(human_readable_number(2))       # Output: 2
print(human_readable_number(800))     # Output: 0.8k
print(human_readable_number(9385832)) # Output: 9.4M
```

This function works by checking the size of the input number and then dividing it by the appropriate factor (1000, 1000000, or 1000000000) to get the number in the desired unit (thousands, millions, or billions). It then formats the result to one decimal place and appends the appropriate unit letter (k, M, or B) to the end of the string.

Note that this function will round the number to one decimal place. If you want to avoid rounding, you could change the format string to `"{:.0f}"` instead of `"{:.1f}"`. However, this would sometimes result in outputs with more than four characters (e.g., "1000" would become "1000" instead of "1k"). [end of text]


