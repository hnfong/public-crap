```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSuffixSumCalculator {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder inputBuilder = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            inputBuilder.append(line).append("\n");
        }
        String input = inputBuilder.toString();

        Pattern pattern = Pattern.compile("(\\d{1,3}(?:,\\d{3})*(?:\\.\\d+)?)\\s*([kKmMgG])?\\b");
        Matcher matcher = pattern.matcher(input);

        double total = 0.0;

        while (matcher.find()) {
            String numberStr = matcher.group(1).replace(",", "");
            double number = Double.parseDouble(numberStr);
            String suffix = matcher.group(2);

            if (suffix != null) {
                switch (suffix.toUpperCase()) {
                    case "K":
                        number *= 1024;
                        break;
                    case "M":
                        number *= 1024 * 1024;
                        break;
                    case "G":
                        number *= 1024 * 1024 * 1024;
                        break;
                }
            }

            total += number;
        }

        System.out.printf("%.1f%n", total);
        System.out.printf("%.1f k%n", total / 1024);
        System.out.printf("%.1f M%n", total / (1024 * 1024));
        System.out.printf("%.1f G%n", total / (1024 * 1024 * 1024));
    }
}
``` [end of text]


