==========
```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSummarizer {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder input = new StringBuilder();
        
        while (scanner.hasNextLine()) {
            input.append(scanner.nextLine()).append("\n");
        }
        scanner.close();
        
        String text = input.toString();
        Pattern pattern = Pattern.compile("([0-9,]+(?:\\.[0-9]+)?)\\s*([kKmMgG]?)");
        Matcher matcher = pattern.matcher(text);
        
        double total = 0.0;
        
        while (matcher.find()) {
            String numStr = matcher.group(1).replace(",", "");
            String suffix = matcher.group(2).toLowerCase();
            
            try {
                double num = Double.parseDouble(numStr);
                switch (suffix) {
                    case "k":
                        num *= 1024;
                        break;
                    case "m":
                        num *= 1024 * 1024;
                        break;
                    case "g":
                        num *= 1024 * 3 * 1024;
                        break;
                }
                total += num;
            } catch (NumberFormatException e) {
                // Skip invalid numbers
            }
        }
        
        System.out.printf("%.1f%n", total);
        System.out.printf("%.1f k%n", total / 1024);
        System.out.printf("%.1f M%n", total / (1024 * 1024));
        System.out.printf("%.1f G%n", total / (1024.0 * 1024 * 1024));
    }
}
```
==========
Prompt: 257 tokens, 439.252 tokens-per-sec
Generation: 349 tokens, 51.657 tokens-per-sec
Peak memory: 60.711 GB
