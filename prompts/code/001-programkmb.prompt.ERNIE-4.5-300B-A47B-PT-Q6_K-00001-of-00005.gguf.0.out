```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSumConverter {
    private static final Pattern NUMBER_PATTERN = Pattern.compile(
        "(\\d{1,3}(?:,\\d{3})*(?:\\.\\d+)?|\\d+(?:\\.\\d+)?)([kKmMgG]?)");

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder inputBuilder = new StringBuilder();
        while (scanner.hasNextLine()) {
            inputBuilder.append(scanner.nextLine()).append("\n");
        }
        scanner.close();
        String input = inputBuilder.toString();

        Matcher matcher = NUMBER_PATTERN.matcher(input);
        double totalBytes = 0.0;

        while (matcher.find()) {
            String numberStr = matcher.group(1).replace(",", "");
            String suffix = matcher.group(2).toLowerCase();
            double number = Double.parseDouble(numberStr);

            switch (suffix) {
                case "k":
                    number *= 1024;
                    break;
                case "m":
                    number *= 1024 * 1024;
                    break;
                case "g":
                    number *= 1024 * 1024 * 1024;
                    break;
                default:
                    // No suffix, treat as bytes (or leave as is if no suffix logic needed)
                    break;
            }
            totalBytes += number;
        }

        System.out.println(totalBytes);
        System.out.printf("%.1f k%n", totalBytes / 1024);
        System.out.printf("%.1f M%n", totalBytes / (1024 * 1024));
        System.out.printf("%.1f G%n", totalBytes / (1024 * 1024 * 1024));
    }
}
``` [end of text]


