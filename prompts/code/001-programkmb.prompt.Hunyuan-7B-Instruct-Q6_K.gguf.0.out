<think>

</think>
<answer>
```java
import java.*;
import java.util.*;

public class NumberExtractor {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        scanner.close();

        String[] numbers = extractNumbers(input);
        double sum = 0.0;

        for (String number : numbers) {
            sum += parseNumber(number);
        }

        System.out.printf("%.1f
", sum);
        System.out.printf("%.1f k
", sum / 1024);
        System.out.printf("%.1f M
", sum / (1024 * 1024));
        System.out.printf("%.1f G
", sum / (1024 * 1024 * 1024));
    }

    private static String[] extractNumbers(String input) {
        String[] numbers = new String[0];
        String[] tokens = input.split("\\s*,\\s*");

        for (String token : tokens) {
            String trimmedToken = token.trim();
            if (trimmedToken.matches("-?\\d+(\\.\\d+)?[kKmMgG]")) {
                numbers = Arrays.copyOf(numbers, numbers.length + 1);
                numbers[numbers.length] = trimmedToken;
            }
        }

        return numbers;
    }

    private static double parseNumber(String number) {
        String base = "";
        int suffixIndex = -1;

        for (int i = number.length() - 1; i >= 0; i--) {
            char c = number.charAt(i);
            if (c == 'k' || c == 'K') {
                if (suffixIndex == -1) {
                    base = "Ki";
                    suffixIndex = i;
                } else {
                    base += "i";
                }
            } else if (c == 'm' || c == 'M') {
                if (suffixIndex == -1) {
                    base = "Mi";
                    suffixIndex = i;
                } else {
                    base += "i";
                }
            } else if (c == 'g' || c == 'G') {
                if (suffixIndex == -1) {
                    base = "Gi";
                    suffixIndex = i;
                } else {
                    base += "i";
                }
            } else {
                break;
            }
        }

        if (suffixIndex == -1) {
            return Double.parseDouble(number);
        }

        String numericPart = number.substring(0, suffixIndex);
        double value = Double.parseDouble(numericPart);

        switch (base) {
            case "Ki":
                return value * 1024;
            case "Mi":
                return value * (1024 * 1024);
            case "Gi":
                return value * (1024 * 1024 * 1024);
            default:
                return value;
        }
    }
}
```
</answer> [end of text]


