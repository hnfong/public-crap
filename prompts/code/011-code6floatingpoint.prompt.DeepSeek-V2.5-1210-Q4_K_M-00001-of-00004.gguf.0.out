### Q1. What (if any) is the eventual output of the following Python program?

```python
import math
x = 0.0
while x < math.inf:
    x += 1.0
print(x)
```

#### Answer:
The program will **never terminate** and will not produce any output.

#### Explanation:
- The variable `x` starts at `0.0` and is incremented by `1.0` in each iteration of the loop.
- The loop condition `x < math.inf` is always true because `x` is a finite floating-point number, and `math.inf` represents infinity.
- Since `x` is incremented by a finite amount (`1.0`) in each iteration, it will never reach infinity in finite time.
- Therefore, the loop will run indefinitely, and the program will not terminate or print anything.

---

### Q2. What (if any) is the eventual output of the following Python program? Is it different from the results above?

```python
import math
x = 1.0
while x < math.inf:
    x = x * 1.001
print(x)
```

#### Answer:
The program will eventually terminate and output `inf`.

#### Explanation:
- The variable `x` starts at `1.0` and is multiplied by `1.001` in each iteration of the loop.
- As `x` grows larger, it will eventually exceed the maximum representable finite floating-point value in IEEE 754 (approximately \(1.7976931348623157 \times 10^{308}\) for double-precision).
- Once `x` exceeds this limit, it will be rounded to `inf` (infinity).
- At this point, the loop condition `x < math.inf` will become false, and the loop will terminate.
- The program will then print `inf`.

#### Comparison to Q1:
- Unlike Q1, this program **does terminate** and produces an output (`inf`).
- In Q1, the loop runs indefinitely because `x` is incremented by a fixed finite amount (`1.0`), which cannot reach infinity in finite time.
- In Q2, the loop terminates because `x` grows exponentially and eventually overflows to `inf`.

---

### Q3. Consider the following program:

```python
import math
x = 0.0
inc = float(input("Enter a number"))
while x < math.inf:
    x += inc
print("Done")
```

#### Are there inputs that will lead to the output "Done"? Give at least 2 examples of such inputs if possible.

#### Answer:
Yes, there are inputs that will lead to the output "Done".

#### Explanation:
- The program will terminate and print "Done" if the loop condition `x < math.inf` becomes false.
- This happens when `x` becomes `inf` due to floating-point arithmetic.
- For this to occur, the value of `inc` must be such that `x` eventually overflows to `inf`.

#### Examples of inputs:
1. **Input: `math.inf`**
   - If the user inputs `math.inf` as `inc`, then in the first iteration, `x` will become `inf` (since `x += math.inf` results in `inf`).
   - The loop condition `x < math.inf` will immediately become false, and the program will terminate, printing "Done".

2. **Input: A very large positive number (e.g., \(10^{308}\))**
   - If the user inputs a number close to or equal to the maximum representable finite floating-point value (approximately \(1.7976931348623157 \times 10^{308}\)), then `x` will eventually overflow to `inf` after a few iterations.
   - The loop will terminate, and the program will print "Done".

#### Note:
- If the input is `0.0`, the loop will run indefinitely because `x` will never change and will remain `0.0`.
- If the input is a negative number, the loop will also run indefinitely because `x` will never increase and will remain less than `inf`. [end of text]


