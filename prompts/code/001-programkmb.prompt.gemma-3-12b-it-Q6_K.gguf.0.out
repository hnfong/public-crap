```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MemorySum {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder input = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            input.append(line).append(" ");
        }

        Pattern pattern = Pattern.compile("(\\d+(?:,\\d+)*)[KMkMGg]?");
        Matcher matcher = pattern.matcher(input.toString());

        double totalSum = 0.0;

        while (matcher.find()) {
            String numberString = matcher.group();
            numberString = numberString.replace(",", "");
            double number;
            try {
                number = Double.parseDouble(numberString);
            } catch (NumberFormatException e) {
                continue;
            }

            String suffix = matcher.group().substring(numberString.length());
            suffix = suffix.toUpperCase();

            double multiplier = 1.0;
            switch (suffix) {
                case "K":
                    multiplier = 1024.0;
                    break;
                case "M":
                    multiplier = 1024.0 * 1024.0;
                    break;
                case "G":
                    multiplier = 1024.0 * 1024.0 * 1024.0;
                    break;
            }

            totalSum += number * multiplier;
        }

        DecimalFormat df = new DecimalFormat("#,##0.0");

        System.out.println(df.format(totalSum));
        System.out.println(df.format(totalSum / 1024.0) + " k");
        System.out.println(df.format(totalSum / (1024.0 * 1024.0)) + " M");
        System.out.println(df.format(totalSum / (1024.0 * 1024.0 * 1024.0)) + " G");
    }
}
``` [end of text]


