```python
def abbrev_num(x):
    if x < 1000:
        return str(x)
    elif x < 1000000:
        return f"{x/1000:.1f}K" if x % 1000 >= 500 else f"{x//1000}K"
    elif x < 1000000000:
        return f"{x/1000000:.1f}M" if x % 1000000 >= 500000 else f"{x//1000000}M"
    else:
        return f"{x/1000000000:.1f}B" if x % 1000000000 >= 500000000 else f"{x//1000000000}B"
``` 

This function handles the conversion of the number to a compact, human-readable form. It checks the size of the input number and formats it accordingly, rounding to the nearest unit when necessary to keep the output string to 4 characters or less. The function supports numbers up to the billions. 

For numbers less than 1,000, it returns the number as is. For numbers between 1,000 and 999,999, it rounds to the nearest thousand and appends 'K'. For numbers between 1,000,000 and 999,999,999, it rounds to the nearest million and appends 'M'. For numbers 1,000,000,000 and above, it rounds to the nearest billion and appends 'B'. 

The rounding logic ensures that the output string is as compact as possible while still being accurate. If the remainder after division by the rounding unit is 50% or more, it rounds up; otherwise, it rounds down. This ensures that the output is always a string of 4 characters or less. [end of text]


