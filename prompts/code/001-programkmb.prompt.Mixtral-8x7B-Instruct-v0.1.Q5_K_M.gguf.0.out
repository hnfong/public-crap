 Here's a complete Java program that meets the requirements:

```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SumOfNumbers {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        scanner.close();

        Pattern pattern = Pattern.compile("(-?\\d+(,\\d{3})*(\\.\\d+)?)([KMG]i)?");
        Matcher matcher = pattern.matcher(input);

        double totalSum = 0;
        while (matcher.find()) {
            double value = Double.parseDouble(matcher.group(1).replaceAll(",", ""));
            String suffix = matcher.group(4);
            double factor = (suffix != null) ? getFactor(suffix) : 1;
            totalSum += value * factor;
        }

        System.out.printf("%.1f%n", totalSum);
        System.out.printf("%.1f K%n", totalSum / 1024);
        System.out.printf("%.1f M%n", totalSum / (1024 * 1024));
        System.out.printf("%.1f G%n", totalSum / (1024 * 1024 * 1024));
    }

    private static double getFactor(String suffix) {
        switch (suffix.toLowerCase()) {
            case "k":
                return 1024;
            case "m":
                return 1024 * 1024;
            case "g":
                return 1024 * 1024 * 1024;
            default:
                return 1;
        }
    }
}
```

To run the program, save it as `SumOfNumbers.java` and compile it using the command `javac SumOfNumbers.java`. Then, run the compiled program with the command `java SumOfNumbers`. Enter the input as specified in the problem statement, and the program will output the sum in bytes, kilobytes, megabytes, and gigabytes. [end of text]


