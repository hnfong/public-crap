 Here's a complete Java program that meets the given specifications:

```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MemorySizeConverter {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        scanner.close();

        Pattern pattern = Pattern.compile("(\\d+(,\\d{3})*(\\.\\d+)?)([kmg]?)");
        Matcher matcher = pattern.matcher(input);

        double totalSize = 0;
        while (matcher.find()) {
            double size = Double.parseDouble(matcher.group(1).replaceAll(",", ""));
            String suffix = matcher.group(4);
            switch (suffix) {
                case "k":
                    size *= 1024;
                    break;
                case "m":
                    size *= 1024 * 1024;
                    break;
                case "g":
                    size *= 1024 * 1024 * 1024;
                    break;
                default:
                    // No suffix or invalid suffix, use base value
            }
            totalSize += size;
        }

        System.out.printf("%.1f%n", totalSize);
        System.out.printf("%.1f k%n", totalSize / 1024.0);
        System.out.printf("%.1f M%n", totalSize / (1024.0 * 1024.0));
        System.out.printf("%.1f G%n", totalSize / (1024.0 * 1024.0 * 1024.0));
    }
}
```

To run the program, save it as `MemorySizeConverter.java` and compile it using the following command:

```
javac MemorySizeConverter.java
```

Then, run the compiled program using the following command:

```
java MemorySizeConverter
```

You can input the example input provided in the prompt, and the program will output the expected result. [end of text]


