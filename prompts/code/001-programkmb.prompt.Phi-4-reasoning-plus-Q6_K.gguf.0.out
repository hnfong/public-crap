We are asked: "Task: write a complete single-file Java program using only the standard library (can only import packages in the java.* namespace). The spec for the program is as follows: This program reads a string from standard input (can contain multiple lines), extracts all numbers followed by optional suffixes (k, K, m, M, g, G), converts them to their base value (kilo=1024, M=1024*1024, etc.), calculates their sum, and prints the total sum as well as the sum in kilobytes (K), megabytes (M), and gigabytes (G) to one decimal place."

We are given an example input and output. The program must be production-ready. We must not include any explanation. We must produce a complete single-file Java program that uses only the standard library (only java.* packages allowed). We must not use any third-party libraries.

We must read from standard input. The input can contain multiple lines. We must extract all numbers with optional suffixes. The suffixes are: k, K, m, M, g, G. The conversion: k or K means kilobytes? But the spec says "kilo=1024, M=1024*1024, etc." Wait, check: "extracts all numbers followed by optional suffixes (k, K, m, M, g, G), converts them to their base value (kilo=1024, M=1024*1024, etc.)". Wait, the spec says "kilo=1024" but then "M=1024*1024" etc. But then the output: "7264621772.8" is the total sum in bytes? Let's check the example input: "1.5G, 2K, 3M, and 4.2G 500,000K and 600M". Let's compute: 1.5G = 1.5 * 1024^3 = 1.5 * 1073741824 = 1610612736 bytes. 2K = 2 * 1024 = 2048 bytes. 3M = 3 * 1024^2 = 3 * 1048576 = 3145728 bytes. 4.2G = 4.2 * 1073741824 = 4512670976 bytes. 500,000K = 500000 * 1024 = 512000000 bytes. 600M = 600 * 1048576 = 629145600 bytes. Sum = 1610612736 + 2048 + 3145728 + 4512670976 + 512000000 + 629145600 = Let's sum: 1610612736 + 2048 = 1610614784, then add 3145728 = 1613760512, then add 4512670976 = 6126431488, then add 512000000 = 6638431488, then add 629145600 = 7267577088. Wait, but the example output is "7264621772.8" which is slightly different. Let's recalc carefully:

1.5G = 1.5 * 1024^3 = 1.5 * 1073741824 = 1610612736.0
2K = 2 * 1024 = 2048.0
3M = 3 * 1024^2 = 3 * 1048576 = 3145728.0
4.2G = 4.2 * 1073741824 = 4512670976.0
500,000K = 500000 * 1024 = 512000000.0
600M = 600 * 1048576 = 629145600.0

Now sum: 1610612736 + 2048 = 1610614784
+ 3145728 = 1613760512
+ 4512670976 = 6126431488
+ 512000000 = 6638431488
+ 629145600 = 7267577088

So sum = 7267577088. But the example output is "7264621772.8". There's a discrepancy of 29553116 bytes difference. Let's check the example output: "7264621772.8" is the total sum in bytes? But then the next lines: "7094357.2 k" means in kilobytes, "6928.1 M" means in megabytes, "6.8 G" means in gigabytes. Let's check conversion: if total sum is 7264621772.8 bytes, then in kilobytes: 7264621772.8 / 1024 = 7094357.2, in megabytes: 7094357.2 / 1024 = 6928.1, in gigabytes: 6928.1 / 1024 = 6.8. So the output is in bytes, kilobytes, megabytes, gigabytes. But then our computed sum is 7267577088, which would yield: 7267577088 / 1024 = 7094357.2? Let's check: 7267577088 / 1024 = 7094357.2? Let's compute: 7267577088 / 1024 = 7094357.2 exactly? Let's check: 7094357.2 * 1024 = 7267577088. So our computed sum is 7267577088, but the example output is 7264621772.8. The difference is 7267577088 - 7264621772.8 = 29553115.2. That is weird.

Maybe the conversion factors are different? Possibly the conversion factors are: k = 1000, m = 1000^2, g = 1000^3? But then 1.5G would be 1.5 * 1000^3 = 1.5 * 1000000000 = 1500000000, 4.2G = 4200000000, 3M = 3000000, 600M = 600000000, 500,000K = 500000000, 2K = 2000. Sum = 1500000000 + 2000 + 3000000 + 4200000000 + 500000000 + 600000000 = 1500000000 + 2000 = 1500002000, plus 3000000 = 1503002000, plus 4200000000 = 5703002000, plus 500000000 = 6203002000, plus 600000000 = 6803002000. That doesn't match either.

Maybe the conversion factors are: k = 1024, m = 1024^2, g = 1024^3, but then our computed sum is 7267577088, not 7264621772.8. Let's check the example output: "7264621772.8" divided by 1024^3 = 1073741824 gives 6.76? Let's check: 7264621772.8 / 1073741824 = 6.768? Actually, 6.768 * 1073741824 = 7264621772.16, close enough. So maybe the conversion factors are: k = 1000, m = 1000^2, g = 1000^3? But then 1.5G would be 1.5 * 1000000000 = 1500000000, 4.2G = 4200000000, 3M = 3000000, 600M = 600000000, 500,000K = 500000000, 2K = 2000. Sum = 1500000000 + 2000 + 3000000 + 4200000000 + 500000000 + 600000000 = 1500000000 + 2000 = 1500002000, plus 3000000 = 1503002000, plus 4200000000 = 5703002000, plus 500000000 = 6203002000, plus 600000000 = 6803002000. That doesn't

