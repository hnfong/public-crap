```python
def abbrev_num(x):
    if x < 1000:
        return str(x)
    units = ['K', 'M', 'B', 'T']
    for i, unit in enumerate(units):
        if x < 1000**(i+1):
            return f"{round(x / 1000**i, 1)}{unit}" if i == 0 else f"{round(x / 1000**i, 1):.1f}{unit}"
    return f"{round(x / 1000**len(units), 1)}{units[-1]}"
```

This function first checks if the number is less than 1000, in which case it returns the number as a string. If the number is larger, it iterates through a list of units ('K', 'M', 'B', 'T') and checks if the number is less than the next power of 1000. If it is, it returns the number divided by the current power of 1000, rounded to one decimal place, followed by the current unit. If the number is larger than the largest unit, it returns the number divided by the largest power of 1000, rounded to one decimal place, followed by the largest unit. The function uses f-strings to format the output string. The `:.1f` in the f-string ensures that the output is rounded to one decimal place. The `if i == 0` condition is used to avoid rounding to one decimal place for the 'K' unit, as this would result in a 5-character output for numbers between 1000 and 9999. [end of text]


