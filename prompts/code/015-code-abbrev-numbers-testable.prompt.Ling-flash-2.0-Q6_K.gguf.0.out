Here's the function that fulfills the requirements:

```python
def abbrev_num(x):
    if x < 1000:
        return str(x)
    magnitudes = ['', 'K', 'M', 'B', 'T']
    exp = 0
    while x >= 1000 and exp < len(magnitudes) - 1:
        x /= 1000.0
        exp += 1
    # Round to 1-2 significant digits, then format to fit <=4 chars
    rounded = round(x, 1 if x < 10 else 0)
    # Ensure we don't exceed 4 characters
    s = f"{rounded:.1f}{magnitudes[exp]}"
    if len(s) > 4:
        rounded = round(x)
        s = f"{int(rounded)}{magnitudes[exp]}"
    return s
```

This function:
- Handles numbers below 1000 by returning them directly.
- Scales the number through thousands, millions, etc.
- Rounds to one decimal place if under 10, otherwise rounds to nearest integer.
- Falls back to integer representation if the formatted string exceeds 4 characters.
- Returns a compact, human-readable abbreviated string. [end of text]


