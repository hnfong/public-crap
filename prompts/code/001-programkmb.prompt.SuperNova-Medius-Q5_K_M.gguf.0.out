```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSummarizer {
    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String input = "";
        try {
            String line;
            while ((line = reader.readLine()) != null) {
                input += line + " ";
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        double total = 0;
        Pattern pattern = Pattern.compile("(\\d{1,3}(?:,\\d{3})*)([kKmMgG]?)");
        Matcher matcher = pattern.matcher(input);

        while (matcher.find()) {
            double number = Double.parseDouble(matcher.group(1).replace(",", ""));
            String suffix = matcher.group(2);
            switch (suffix) {
                case "k":
                case "K":
                    total += number * 1024;
                    break;
                case "m":
                case "M":
                    total += number * 1024 * 1024;
                    break;
                case "g":
                case "G":
                    total += number * 1024 * 1024 * 1024;
                    break;
                default:
                    total += number;
            }
        }

        System.out.printf("%.1f%n", total);
        System.out.printf("%.1f k%n", total / 1024);
        System.out.printf("%.1f M%n", total / (1024 * 1024));
        System.out.printf("%.1f G%n", total / (1024 * 1024 * 1024));
    }
}
``` [end of text]


