```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberSummarizer {

    private static final Pattern NUMBER_PATTERN = Pattern.compile("(\\d{1,3}(,\\d{3})*(\\.\\d+)?)([kKmMgG]?)");
    private static final double KILO = 1024;
    private static final double MEGA = KILO * 1024;
    private static final double GIGA = MEGA * 1024;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder input = new StringBuilder();
        while (scanner.hasNextLine()) {
            input.append(scanner.nextLine()).append("\n");
        }
        scanner.close();

        double totalSum = extractAndSumNumbers(input.toString());
        printResults(totalSum);
    }

    private static double extractAndSumNumbers(String input) {
        Matcher matcher = NUMBER_PATTERN.matcher(input);
        double sum = 0;
        while (matcher.find()) {
            String numberStr = matcher.group(1).replace(",", "");
            double number = Double.parseDouble(numberStr);
            String suffix = matcher.group(4);
            switch (suffix) {
                case "k":
                case "K":
                    number *= KILO;
                    break;
                case "m":
                case "M":
                    number *= MEGA;
                    break;
                case "g":
                case "G":
                    number *= GIGA;
                    break;
                default:
                    break;
            }
            sum += number;
        }
        return sum;
    }

    private static void printResults(double totalSum) {
        System.out.printf("%.1f\n", totalSum);
        System.out.printf("%.1f k\n", totalSum / KILO);
        System.out.printf("%.1f M\n", totalSum / MEGA);
        System.out.printf("%.1f G\n", totalSum / GIGA);
    }
}
``` [end of text]


