import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ByteSum {
    private static final Pattern NUMBER_PATTERN = Pattern.compile(
        "([+-]?\\d{1,3}(?:,\\d{3})*(?:\\.\\d+)?)\\s*([kKmMgG]?)"
    );

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = br.readLine()) != null) {
            sb.append(line).append('\n');
        }
        String input = sb.toString();

        double totalBytes = 0.0;

        Matcher m = NUMBER_PATTERN.matcher(input);
        while (m.find()) {
            String numStr = m.group(1).replace(",", "");
            double value = Double.parseDouble(numStr);
            String suffix = m.group(2).toUpperCase();

            switch (suffix) {
                case "K":
                    value *= 1024;
                    break;
                case "M":
                    value *= 1024 * 1024;
                    break;
                case "G":
                    value *= 1024 * 1024 * 1024;
                    break;
                default:
                    break;
            }
            totalBytes += value;
        }

        System.out.printf("%.1f%n", totalBytes);
        System.out.printf("%.1f k%n", totalBytes / 1024);
        System.out.printf("%.1f M%n", totalBytes / (1024 * 1024));
        System.out.printf("%.1f G%n", totalBytes / (1024.0 * 1024 * 1024));
    }
} [end of text]


