```java
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SumNumbers {

    public static void main(String[] args) {
        String input = System.in.read() + "";
        List<Double> numbers = new ArrayList<>();

        Pattern pattern = Pattern.compile("([-+]?\\d*\\.?\\d+(?:,\\d+)?)(k?|K?|m?|M?|g?|G?)");
        Matcher matcher = pattern.matcher(input);

        while (matcher.find()) {
            String numberStr = matcher.group(1);
            String suffix = matcher.group(2);

            try {
                double number = Double.parseDouble(numberStr.replace(",", "."));
                double base = 0;

                if (suffix != null && suffix.toUpperCase() == "K") {
                    base = 1024;
                } else if (suffix != null && suffix.toUpperCase() == "M") {
                    base = 1024 * 1024;
                } else if (suffix != null && suffix.toUpperCase() == "G") {
                    base = 1024 * 1024 * 1024;
                } else {
                    base = 1;
                }

                numbers.add(number * base);
            } catch (NumberFormatException e) {
                // Handle invalid number format
            }
        }

        double totalSum = numbers.stream().mapToDouble(Double::doubleValue).sum();

        System.out.println(totalSum);

        double kilobytes = numbers.stream().mapToDouble(Double::doubleValue).sum() / 1024.0;
        System.out.println(kilobytes + " K");

        double megabytes = kilobytes / 1024.0;
        System.out.println(megabytes + " M");

        double gigabytes = megabytes / 1024.0;
        System.out.println(gigabytes + " G");
    }
}
``` [end of text]


