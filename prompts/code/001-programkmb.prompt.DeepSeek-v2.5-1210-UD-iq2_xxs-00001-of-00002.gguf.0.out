```java
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberConverter {

    private static final Pattern NUMBER_PATTERN = Pattern.compile("(\\d{1,3}(,\\d{3})*(\\.\\d+)?)\\s*([kKmMgG]?)");

    public static void main(String[] args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String input = reader.readLine();
        double totalSum = 0;

        Matcher matcher = NUMBER_PATTERN.matcher(input);
        while (matcher.find()) {
            String numberStr = matcher.group(1).replace(",", "");
            double number = Double.parseDouble(numberStr);
            String suffix = matcher.group(4);
            totalSum += convertToBase(number, suffix);
        }

        System.out.println(totalSum);
        System.out.println(convertToKilobytes(totalSum) + " K");
        System.out.println(convertToMegabytes(totalSum) + " M");
        System.out.println(convertToGigabytes(totalSum) + " G");
    }

    private static double convertToBase(double number, String suffix) {
        switch (suffix.toUpperCase()) {
            case "K": return number * 1024;
            case "M": return number * 1024 * 1024;
            case "G": return number * 1024 * 1024 * 1024;
            default: return number;
        }
    }

    private static double convertToKilobytes(double number) {
        return number / 1024;
    }

    private static double convertToMegabytes(double number) {
        return number / (1024 * 1024);
    }

    private static double convertToGigabytes(double number) {
        return number / (1024 * 1024 * 1024);
    }
}
``` [end of text]


