```java
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberParser {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StringBuilder input = new StringBuilder();
        while (scanner.hasNextLine()) {
            input.append(scanner.nextLine()).append(" ");
        }
        scanner.close();

        String inputString = input.toString();
        Pattern pattern = Pattern.compile("(\\d+(?:\\.\\d+)?(?:,\\d{3})*)([kKmMgG]?)");
        Matcher matcher = pattern.matcher(inputString);

        double totalSum = 0.0;

        while (matcher.find()) {
            String numberStr = matcher.group(1).replace(",", "");
            double number = Double.parseDouble(numberStr);
            String suffix = matcher.group(2);

            switch (suffix.toUpperCase()) {
                case "K":
                    number *= 1024;
                    break;
                case "M":
                    number *= 1024 * 1024;
                    break;
                case "G":
                    number *= 1024 * 1024 * 1024;
                    break;
            }

            totalSum += number;
        }

        double kilobytes = totalSum / 1024;
        double megabytes = kilobytes / 1024;
        double gigabytes = megabytes / 1024;

        System.out.printf("%.1f%n", totalSum);
        System.out.printf("%.1f k%n", kilobytes);
        System.out.printf("%.1f M%n", megabytes);
        System.out.printf("%.1f G%n", gigabytes);
    }
}
``` [end of text]


