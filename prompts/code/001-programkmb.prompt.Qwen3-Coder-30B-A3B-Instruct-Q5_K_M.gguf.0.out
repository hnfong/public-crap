```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class NumberExtractor {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder input = new StringBuilder();
        String line;
        
        while ((line = reader.readLine()) != null) {
            input.append(line).append("\n");
        }
        
        String text = input.toString();
        Pattern pattern = Pattern.compile("(-?\\d+(?:\\.\\d+)?)([kKmMgG])?");
        Matcher matcher = pattern.matcher(text);
        
        double total = 0.0;
        
        while (matcher.find()) {
            String numberStr = matcher.group(1);
            String suffix = matcher.group(2);
            
            double number = Double.parseDouble(numberStr);
            
            switch (suffix != null ? suffix.toLowerCase() : "") {
                case "k":
                    number *= 1024;
                    break;
                case "m":
                    number *= 1024 * 1024;
                    break;
                case "g":
                    number *= 1024 * 1024 * 1024;
                    break;
                default:
                    // No suffix, keep as is
                    break;
            }
            
            total += number;
        }
        
        // Remove commas from the total for display
        String formattedTotal = String.format("%.1f", total);
        System.out.println(formattedTotal);
        
        // Convert to different units
        double totalK = total / 1024.0;
        double totalM = total / (1024.0 * 1024.0);
        double totalG = total / (1024.0 * 1024.0 * 1024.0);
        
        System.out.printf("%.1f k%n", totalK);
        System.out.printf("%.1f M%n", totalM);
        System.out.printf("%.1f G%n", totalG);
    }
}
``` [end of text]


