My best guess is **December 2023**.

Here's my reasoning, heavily relying on the distinctive writing style and the hint about a specific day and month:

The author's tone is *extremely* critical of the Rust community, bordering on dismissive and even condescending. They express frustration with Rust's pace of innovation, its build system limitations, and the perceived "imperiousness" of its users.  They also make several statements that are highly controversial within the Rust community, such as downplaying the importance of memory safety and dismissing the need for diversity initiatives. This kind of strongly worded, contrarian take is very characteristic of posts that appear around **December 1st** each year.

**The Hint: Advent of Code**

December 1st marks the start of **Advent of Code** (AoC). AoC is a popular programming challenge series where a new puzzle is released each day of December.  It's *extremely* popular within the Rust community.  However, it also frequently sparks debate and discussion about language suitability, performance, and the "best" way to solve the puzzles. 

The author's complaints about Rust's build system, the desire for faster innovation, and the perceived focus on "combinations of existing features" all align with common criticisms that surface *during* Advent of Code.  People often compare Rust's performance and ease of use to other languages (like C++) while tackling AoC challenges.

Furthermore, the author's mention of C++20 modules being "fairly soon" implemented and C++26 features being discussed points to a timeframe where these are actively being talked about, which is late 2023/early 2024.  The reference to Herb Sutter's cppfront proposal also fits this timeline.

The final clue is the mention of discussion on Hacker News and /r/rust.  A post like this, deliberately provocative and announcing a move *away* from Rust, would almost certainly generate a significant amount of discussion on those platforms, especially around the start of December when AoC is driving a lot of Rust-related activity.

**Why not earlier?**

While some of the complaints about Rust have existed for a while, the specific references to C++20 modules, C++26 features, and cppfront suggest a more recent date.  The tone also feels very much like a reaction to the current state of the Rust ecosystem, as of late 2023.

**In conclusion:** The combination of the author's highly critical tone, the specific complaints about Rust, the references to recent C++ developments, and the strong connection to the Advent of Code timeframe leads me to believe this was written in **December 2023**. It's likely a response to frustrations experienced while participating in (or observing) Advent of Code.
 [end of text]


