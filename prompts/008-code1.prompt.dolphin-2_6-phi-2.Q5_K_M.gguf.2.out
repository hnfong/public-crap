<|im_start|>user
Please write a python implementation of bubble sort. Then write a python implementation of merge sort. Discuss the two algorithms and compare them.

<|im_start|>assistant
Bubble Sort:

```python
def bubble_sort(arr):
    n = len(arr)

    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

# Test the function
arr = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(arr)
print ("Sorted array is:", arr)
```
In Bubble Sort, the largest element 'bubbles' to the end of the list with each iteration. The algorithm continues iterating through the list until it makes a pass without swapping any elements, indicating that the list is sorted.

Merge Sort:

```python
def mergeSort(arr):
    if len(arr) > 1:

        mid = len(arr)//2
        L = arr[:mid]
        R = arr[mid:]

        mergeSort(L)
        mergeSort(R)

        i = j = k = 0

        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                arr[k] = L[i]
                i += 1
            else:
                arr[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            arr[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            arr[k] = R[j]
            j += 1
            k += 1

# Test the function
arr = [64, 34, 25, 12, 22, 11, 90]
mergeSort(arr)
print ("Sorted array is:", arr)
```
Merge Sort works by breaking down a problem into sub-problems until they become simple enough to be solved directly. It then combines the solutions of these sub-problems in order to solve the original problem. The main idea behind merge sort is dividing and conquering.

Bubble Sort vs Merge Sort:

1. Bubble Sort has an average time complexity of O(n^2), which makes it inefficient for large data sets. In contrast, Merge Sort's worst-case, average, and best-case complexities are all O(n log n). This makes Merge Sort a more efficient sorting algorithm than Bubble Sort in large datasets.
2. Merge Sort is stable whereas Bubble Sort isn't. Stability in an algorithm means that when two equal elements appear in the input data they remain in their same order after sorting. Because of this, bubble sort may not be suitable for cases where preserving element order is necessary.
3. In terms of space complexity, both have O(n), so they use the same amount of space. However, bubble sort requires additional space to track the swap count, which merge sort doesn't require.